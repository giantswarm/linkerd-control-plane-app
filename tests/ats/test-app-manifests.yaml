apiVersion: v1
kind: Namespace
metadata:
  labels:
    app: helloworld
  name: helloworld
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: helloworld
  name: helloworld-sa
  namespace: helloworld
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  labels:
    app: helloworld
  name: helloworld-psp
spec:
  allowPrivilegeEscalation: false
  fsGroup:
    ranges:
    - max: 1000
      min: 1000
    rule: MustRunAs
  runAsUser:
    rule: MustRunAsNonRoot
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    ranges:
    - max: 1000
      min: 1000
    rule: MustRunAs
  volumes:
  - secret
  - emptyDir
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: helloworld
  name: helloworld-role
  namespace: helloworld
rules:
- apiGroups:
  - extensions
  - policy
  resourceNames:
  - helloworld-psp
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: helloworld
  name: helloworld
  namespace: helloworld
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: helloworld-role
subjects:
- kind: ServiceAccount
  name: helloworld-sa
  namespace: helloworld
---
apiVersion: v1
data:
  HOST: hello.does-not-matter.test
kind: ConfigMap
metadata:
  labels:
    app: helloworld
  name: ingress-properties-78m6792kbt
  namespace: helloworld
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: helloworld
  name: helloworld
  namespace: helloworld
spec:
  ports:
  - port: 8080
  selector:
    app: helloworld
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: helloworld
  name: helloworld
  namespace: helloworld
spec:
  replicas: 1
  selector:
    matchLabels:
      app: helloworld
  template:
    metadata:
      annotations:
        linkerd.io/inject: enabled
      labels:
        app: helloworld
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - helloworld
            topologyKey: kubernetes.io/hostname
      containers:
      - image: quay.io/giantswarm/helloworld:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
        name: helloworld
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
        resources:
          limits:
            cpu: 50m
            memory: 50Mi
          requests:
            cpu: 50m
            memory: 50Mi
      securityContext:
        runAsGroup: 1000
        runAsUser: 1000
      serviceAccountName: helloworld-sa
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  labels:
    app: helloworld
  name: helloworld-pdb
  namespace: helloworld
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: helloworld
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app: helloworld
    kubernetes.io/ingress.class: nginx
  name: helloworld
  namespace: helloworld
spec:
  rules:
  - host: hello.does-not-matter.test
    http:
      paths:
      - backend:
          service:
            name: helloworld
            port:
              number: 8080
        path: /
        pathType: Prefix
