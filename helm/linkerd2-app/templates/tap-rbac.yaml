---
###
### Tap RBAC
###
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-{{.Release.namespace}}-tap
  labels:
    {{.Values.global.controllerComponentLabel}}: tap
    {{.Values.global.controllerNamespaceLabel}}: {{.Release.namespace}}
rules:
- apiGroups: [""]
  resources: ["pods", "services", "replicationcontrollers", "namespaces", "nodes"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["daemonsets", "deployments", "replicasets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list" , "get", "watch"]
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-{{.Release.namespace}}-tap-admin
  labels:
    {{.Values.global.controllerComponentLabel}}: tap
    {{.Values.global.controllerNamespaceLabel}}: {{.Release.namespace}}
rules:
- apiGroups: ["tap.linkerd.io"]
  resources: ["*"]
  verbs: ["watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-{{.Release.namespace}}-tap
  labels:
    {{.Values.global.controllerComponentLabel}}: tap
    {{.Values.global.controllerNamespaceLabel}}: {{.Release.namespace}}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-{{.Release.namespace}}-tap
subjects:
- kind: ServiceAccount
  name: linkerd-tap
  namespace: {{.Release.namespace}}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-{{.Release.namespace}}-tap-auth-delegator
  labels:
    {{.Values.global.controllerComponentLabel}}: tap
    {{.Values.global.controllerNamespaceLabel}}: {{.Release.namespace}}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: linkerd-tap
  namespace: {{.Release.namespace}}
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-tap
  namespace: {{.Release.namespace}}
  labels:
    {{.Values.global.controllerComponentLabel}}: tap
    {{.Values.global.controllerNamespaceLabel}}: {{.Release.namespace}}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-{{.Release.namespace}}-tap-auth-reader
  namespace: kube-system
  labels:
    {{.Values.global.controllerComponentLabel}}: tap
    {{.Values.global.controllerNamespaceLabel}}: {{.Release.namespace}}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: linkerd-tap
  namespace: {{.Release.namespace}}
---
{{-  $ca := genCA (printf "linkerd-tap.%s.svc" .Release.namespace) 365 }}
{{- if (not .Values.tap.externalSecret) }}
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-tap-tls
  namespace: {{ .Release.namespace }}
  labels:
    {{.Values.global.controllerComponentLabel}}: tap
    {{.Values.global.controllerNamespaceLabel}}: {{.Release.namespace}}
  annotations:
    {{.Values.global.createdByAnnotation}}: {{default (printf "linkerd/helm %s" .Values.global.linkerdVersion) .Values.global.cliVersion}}
type: Opaque
data:
  crt.pem: {{ ternary (b64enc $ca.Cert) (b64enc (trim .Values.tap.crtPEM)) (empty .Values.tap.crtPEM) }}
  key.pem: {{ ternary (b64enc $ca.Key) (b64enc (trim .Values.tap.keyPEM)) (empty .Values.tap.keyPEM) }}
---
{{- end }}
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.tap.linkerd.io
  labels:
    {{.Values.global.controllerComponentLabel}}: tap
    {{.Values.global.controllerNamespaceLabel}}: {{.Release.namespace}}
spec:
  group: tap.linkerd.io
  version: v1alpha1
  groupPriorityMinimum: 1000
  versionPriority: 100
  service:
    name: linkerd-tap
    namespace: {{.Release.namespace}}
{{- if and (.Values.tap.externalSecret) (empty .Values.tap.caBundle) }}
  {{- fail "If tap.externalSecret is true then you need to provide tap.caBundle" }}
{{- end }}
  caBundle: {{ ternary (b64enc $ca.Cert) (b64enc (trim .Values.tap.caBundle)) (empty .Values.tap.caBundle) }}
