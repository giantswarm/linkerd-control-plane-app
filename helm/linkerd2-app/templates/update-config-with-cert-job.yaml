---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: global-config-creator
  namespace: {{ .Values.Namespace }}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": "hook-succeeded,hook-failed"
  labels:
    app: global-config-creator
    giantswarm.io/service-type: "managed"
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  resourceName:
  - linkerd-config
  verbs:
  - "get"
  - "list"
  - "watch"
  - "replace"
- apiGroups:
  - ""
  resources:
  - secrets
  resourceName:
  - linkerd-identity-issuer
  verbs:
  - "get"
  - "list"
  - "watch"
- apiGroups:
  - extensions
  resources:
  - podsecuritypolicies
  resourceNames:
  - linkerd-{{.Values.Namespace}}-control-plane
  verbs:
  - "use"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: global-config-creator
  namespace: {{ .Values.Namespace }}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": "hook-succeeded,hook-failed"
  namespace: {{ .Values.Namespace }}
  labels:
    app: global-config-creator
    giantswarm.io/service-type: "managed"
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: global-config-creator
  namespace: {{ .Values.Namespace }}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "-4"
    "helm.sh/hook-delete-policy": "hook-succeeded,hook-failed"
  labels:
    app: global-config-creator
    giantswarm.io/service-type: "managed"
subjects:
  - kind: ServiceAccount
    name: global-config-creator
    namespace: {{ .Values.Namespace }}
roleRef:
  kind: Role
  name: global-config-creator
  namespace: {{ .Values.Namespace }}
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: Job
metadata:
  name: global-config-creator
  namespace: {{ .Values.Namespace }}
  annotations:
    "helm.sh/hook": "pre-install"
    #    "helm.sh/hook-delete-policy": "hook-succeeded"
  labels:
    app: global-config-creator
    giantswarm.io/service-type: "managed"
spec:
  template:
    spec:
      serviceAccountName: global-config-creator
      containers:
      - name: global-config-creator
        image: "bitnami/kubectl:latest"
        command:
        - /bin/bash
        - -e
        - -x
        - -c
        - |
          "export CERT=\"`kubectl -n linkerd get secret linkerd-identity-issuer -o jsonpath=\"{.data['ca\.crt']}\"`\"; kubectl -n linkerd get cm linkerd-config -o yaml --export > /tmp/config.yaml; sed -i \"s/REPLACE_ME/\$CERT/\" /tmp/config.yaml; #kubectl -n linkerd replace configmap linkerd-config -f /tmp/config.yam"
          #          "set -e; while true; do export CERT=\"`kubectl -n linkerd get secret linkerd-identity-issuer -o jsonpath=\"{.data['ca\.crt']}\"`\"; if [[ $? == 0 ]]; then break; fi; echo \"waiting for cert\"; sleep 1; done; set +e; kubectl -n linkerd get cm linkerd-config -o yaml --export > /tmp/config.yaml; sed -i \"s/REPLACE_ME/\$CERT/\" /tmp/config.yaml; #kubectl -n linkerd replace configmap linkerd-config -f /tmp/config.yam"
      restartPolicy: Never
  backoffLimit: 4
