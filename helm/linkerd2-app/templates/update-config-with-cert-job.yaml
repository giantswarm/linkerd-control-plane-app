apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: {{ .Values.name }}
  annotations:
    "helm.sh/hook": "post-install"
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "hook-succeeded,hook-failed"
  labels:
    app: {{ .Values.name }}
    giantswarm.io/service-type: "managed"
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  resourceName:
  - kube-system
  verbs:
  - "get"
  - "patch"
- apiGroups:
  - extensions
  resources:
  - podsecuritypolicies
  resourceNames:
  - {{ .Values.name }}
  verbs:
  - "use"
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: {{ .Values.name }}
  annotations:
    "helm.sh/hook": "post-install"
    "helm.sh/hook-weight": "-2"
    "helm.sh/hook-delete-policy": "hook-succeeded"
  labels:
    app: {{ .Values.name }}
    giantswarm.io/service-type: "managed"
subjects:
  - kind: ServiceAccount
    name: {{ .Values.name }}
    namespace: {{ .Values.namespace }}
roleRef:
  kind: Role
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "hook-succeeded"
  labels:
    app: {{ .Values.name }}
    giantswarm.io/service-type: "managed"
spec:
  template:
    spec:
      serviceAccountName: {{ .Values.name }}
      securityContext:
        runAsUser: {{ .Values.userID }}
        runAsGroup: {{ .Values.groupID }}
      containers:
      - name: {{ .Values.name }}
        image: "quay.io/giantswarm/docker-kubectl:latest"
        command:
        - /bin/bash
        - -c 
        - "while true; do CERT=`kubectl -n linkerd get secret linkerd-identity-issuer -o jsonpath=\"{.data['ca\.crt']}\"`; if [[ $? == 0 ]]; then break; fi; sleep 1; done; echo $CERT; kubectl -n linkerd get cm linkerd-config -o yaml --export | sed \"s/REPLACE_ME/$CERT/\" | kubectl -n linkerd replace cm linkerd-config -f -"
        resources:
{{ toYaml .Values.resources | indent 10 }}
      restartPolicy: Never
  backoffLimit: 4
